{
  "id": "snapshot_1758736802348_8vwod7jni",
  "approvalId": "approval_1758736802339_hajb23om3",
  "approvalTitle": "GitLab集成API系统需求文档审批",
  "version": 1,
  "timestamp": "2025-09-24T18:00:02.348Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# Requirements: GitLab Integration API System\n\n## Overview\nGitLab 集成 API 系统为 MoonLens 提供与 GitLab 平台的深度集成能力，包括项目同步、Webhook 管理、MR 事件处理、审查结果同步等核心功能，是连接 GitLab 平台与 AI 代码审查的关键桥梁。\n\n## User Stories\n\n### 1. GitLab 项目导入 API\n**作为** API 服务\n**我需要** 提供 GitLab 项目导入接口\n**以便于** 支持前端用户批量导入和管理 GitLab 项目\n\n**验收标准**：\n- 验证 GitLab Token 有效性和权限\n- 获取用户可访问的项目列表\n- 支持项目信息批量同步\n- 创建项目本地记录和映射关系\n- 保存加密的 GitLab 访问凭据\n- 项目导入状态实时更新\n\n### 2. Webhook 配置管理 API\n**作为** API 服务\n**我需要** 提供 GitLab Webhook 配置管理接口\n**以便于** 自动接收和处理 GitLab 事件\n\n**验收标准**：\n- 自动生成安全的 Webhook URL 和 Secret\n- 调用 GitLab API 创建/更新 Webhook\n- 配置事件类型过滤（MR、Push、评论）\n- Webhook 连接测试和状态监控\n- 支持 Webhook 配置的增删改查\n- 处理 GitLab API 权限和错误\n\n### 3. GitLab 事件处理 API\n**作为** API 服务\n**我需要** 接收和处理 GitLab Webhook 事件\n**以便于** 触发相应的业务逻辑\n\n**验收标准**：\n- 接收 GitLab Webhook POST 请求\n- 验证 Webhook 签名和来源\n- 解析不同类型的 GitLab 事件\n- 事件数据标准化和验证\n- 异步事件处理队列\n- 事件处理状态跟踪和日志\n\n### 4. MR 操作管理 API\n**作为** API 服务\n**我需要** 提供 Merge Request 操作接口\n**以便于** 获取 MR 信息和发布审查结果\n\n**验收标准**：\n- 获取 MR 列表和详细信息\n- 获取 MR 代码差异（Diff）\n- 创建 MR 评论和逐行讨论\n- 更新 MR 状态和标签\n- 处理 MR 评论回复\n- 支持 MR 批量操作\n\n### 5. 项目同步管理 API\n**作为** API 服务\n**我需要** 提供项目信息同步接口\n**以便于** 保持本地项目数据与 GitLab 的一致性\n\n**验收标准**：\n- 同步项目基本信息（名称、描述、分支等）\n- 同步项目成员和权限\n- 同步项目分支和标签信息\n- 处理项目变更和删除\n- 增量同步和冲突处理\n- 同步状态监控和错误恢复\n\n### 6. GitLab API 客户端服务\n**作为** API 服务\n**我需要** 封装 GitLab API 调用\n**以便于** 提供统一的 GitLab 操作接口\n\n**验收标准**：\n- 统一的 GitLab API 调用封装\n- 自动处理认证和授权\n- API 请求限流和重试机制\n- 错误处理和状态码映射\n- API 响应缓存策略\n- 支持多个 GitLab 实例\n\n## Functional Requirements\n\n### FR1: 认证管理\n- **FR1.1**: GitLab Personal Access Token 管理\n- **FR1.2**: GitLab OAuth 2.0 应用认证\n- **FR1.3**: Token 加密存储和安全管理\n- **FR1.4**: Token 有效性验证和刷新\n- **FR1.5**: 多 GitLab 实例支持\n\n### FR2: 项目集成\n- **FR2.1**: GitLab 项目列表获取和过滤\n- **FR2.2**: 项目详细信息同步\n- **FR2.3**: 项目成员和权限映射\n- **FR2.4**: 分支和标签信息同步\n- **FR2.5**: 项目配置和 Webhook 管理\n\n### FR3: Webhook 服务\n- **FR3.1**: Webhook 端点注册和管理\n- **FR3.2**: 事件签名验证和安全检查\n- **FR3.3**: 事件类型解析和路由\n- **FR3.4**: 异步事件处理队列\n- **FR3.5**: 事件重试和失败恢复\n\n### FR4: MR 集成\n- **FR4.1**: MR 数据获取和解析\n- **FR4.2**: 代码差异分析和提取\n- **FR4.3**: MR 评论和讨论管理\n- **FR4.4**: 审查结果同步回 GitLab\n- **FR4.5**: MR 状态和标签更新\n\n### FR5: 数据同步\n- **FR5.1**: 增量数据同步机制\n- **FR5.2**: 同步冲突检测和处理\n- **FR5.3**: 数据一致性验证\n- **FR5.4**: 同步状态监控和报告\n- **FR5.5**: 批量同步优化\n\n## Non-Functional Requirements\n\n### NFR1: 性能要求\n- **NFR1.1**: Webhook 响应时间 < 200ms\n- **NFR1.2**: GitLab API 调用响应 < 2s\n- **NFR1.3**: 支持 100+ 并发 Webhook 请求\n- **NFR1.4**: 事件处理延迟 < 5s\n- **NFR1.5**: 批量操作优化（分页、并行）\n\n### NFR2: 可靠性要求\n- **NFR2.1**: Webhook 事件处理成功率 > 99%\n- **NFR2.2**: API 调用重试机制（指数退避）\n- **NFR2.3**: 事件幂等性保证\n- **NFR2.4**: 断点续传和错误恢复\n- **NFR2.5**: 数据一致性保证机制\n\n### NFR3: 安全要求\n- **NFR3.1**: GitLab Token AES-256 加密存储\n- **NFR3.2**: Webhook 签名验证（HMAC-SHA256）\n- **NFR3.3**: API 请求 HTTPS 强制加密\n- **NFR3.4**: 敏感数据脱敏和日志过滤\n- **NFR3.5**: 访问控制和操作审计\n\n### NFR4: 扩展性要求\n- **NFR4.1**: 支持多 GitLab 实例集成\n- **NFR4.2**: 插件化事件处理器\n- **NFR4.3**: 水平扩展和负载均衡\n- **NFR4.4**: 配置热更新支持\n- **NFR4.5**: API 版本兼容性管理\n\n### NFR5: 监控要求\n- **NFR5.1**: API 调用监控和统计\n- **NFR5.2**: Webhook 事件监控\n- **NFR5.3**: 同步状态实时监控\n- **NFR5.4**: 错误告警和通知\n- **NFR5.5**: 性能指标收集\n\n## API Specifications\n\n### GitLab Integration APIs\n\n#### GET /api/gitlab/projects\n```json\n{\n  \\\"query\\\": {\n    \\\"token\\\": \\\"string\\\",\n    \\\"search\\\": \\\"string\\\",\n    \\\"visibility\\\": \\\"private|internal|public\\\",\n    \\\"membership\\\": \\\"boolean\\\",\n    \\\"page\\\": 1,\n    \\\"limit\\\": 20\n  },\n  \\\"response\\\": {\n    \\\"projects\\\": [\n      {\n        \\\"id\\\": \\\"number\\\",\n        \\\"name\\\": \\\"string\\\",\n        \\\"path\\\": \\\"string\\\",\n        \\\"namespace\\\": \\\"string\\\",\n        \\\"description\\\": \\\"string\\\",\n        \\\"visibility\\\": \\\"string\\\",\n        \\\"defaultBranch\\\": \\\"string\\\",\n        \\\"webUrl\\\": \\\"string\\\",\n        \\\"sshUrl\\\": \\\"string\\\",\n        \\\"httpUrl\\\": \\\"string\\\",\n        \\\"permissions\\\": {...}\n      }\n    ],\n    \\\"pagination\\\": {...}\n  }\n}\n```\n\n#### POST /api/gitlab/projects/import\n```json\n{\n  \\\"request\\\": {\n    \\\"token\\\": \\\"string\\\",\n    \\\"projectIds\\\": [\\\"number\\\"],\n    \\\"syncMembers\\\": true,\n    \\\"setupWebhook\\\": true\n  },\n  \\\"response\\\": {\n    \\\"imported\\\": [\n      {\n        \\\"gitlabId\\\": \\\"number\\\",\n        \\\"localId\\\": \\\"uuid\\\",\n        \\\"status\\\": \\\"success|failed\\\",\n        \\\"webhookId\\\": \\\"string\\\",\n        \\\"error\\\": \\\"string\\\"\n      }\n    ],\n    \\\"summary\\\": {\n      \\\"total\\\": 10,\n      \\\"successful\\\": 8,\n      \\\"failed\\\": 2\n    }\n  }\n}\n```\n\n### Webhook Management APIs\n\n#### POST /api/gitlab/projects/:id/webhook\n```json\n{\n  \\\"request\\\": {\n    \\\"events\\\": [\\\"merge_requests\\\", \\\"push\\\", \\\"note\\\"],\n    \\\"enableSslVerification\\\": true\n  },\n  \\\"response\\\": {\n    \\\"id\\\": \\\"string\\\",\n    \\\"url\\\": \\\"string\\\",\n    \\\"secret\\\": \\\"string\\\",\n    \\\"events\\\": [...],\n    \\\"status\\\": \\\"active\\\"\n  }\n}\n```\n\n#### GET /api/gitlab/projects/:id/webhook\n```json\n{\n  \\\"response\\\": {\n    \\\"id\\\": \\\"string\\\",\n    \\\"url\\\": \\\"string\\\",\n    \\\"events\\\": [...],\n    \\\"status\\\": \\\"active|inactive\\\",\n    \\\"lastTriggered\\\": \\\"datetime\\\",\n    \\\"successRate\\\": 0.98,\n    \\\"recentEvents\\\": [...]\n  }\n}\n```\n\n#### DELETE /api/gitlab/projects/:id/webhook\n```json\n{\n  \\\"response\\\": {\n    \\\"message\\\": \\\"Webhook deleted successfully\\\"\n  }\n}\n```\n\n### Webhook Event Processing APIs\n\n#### POST /api/webhook/gitlab/:projectId\n```json\n{\n  \\\"headers\\\": {\n    \\\"X-Gitlab-Event\\\": \\\"Merge Request Hook\\\",\n    \\\"X-Gitlab-Token\\\": \\\"string\\\"\n  },\n  \\\"request\\\": {\n    \\\"object_kind\\\": \\\"merge_request\\\",\n    \\\"event_type\\\": \\\"merge_request\\\",\n    \\\"project\\\": {...},\n    \\\"object_attributes\\\": {...},\n    \\\"changes\\\": {...},\n    \\\"user\\\": {...}\n  },\n  \\\"response\\\": {\n    \\\"received\\\": true,\n    \\\"eventId\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"queued\\\"\n  }\n}\n```\n\n#### GET /api/webhook/events/:eventId/status\n```json\n{\n  \\\"response\\\": {\n    \\\"eventId\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"queued|processing|completed|failed\\\",\n    \\\"processedAt\\\": \\\"datetime\\\",\n    \\\"result\\\": {...},\n    \\\"error\\\": \\\"string\\\"\n  }\n}\n```\n\n### Merge Request APIs\n\n#### GET /api/gitlab/projects/:id/merge-requests\n```json\n{\n  \\\"query\\\": {\n    \\\"state\\\": \\\"opened|closed|merged\\\",\n    \\\"author\\\": \\\"string\\\",\n    \\\"assignee\\\": \\\"string\\\",\n    \\\"milestone\\\": \\\"string\\\",\n    \\\"page\\\": 1,\n    \\\"limit\\\": 20\n  },\n  \\\"response\\\": {\n    \\\"mergeRequests\\\": [\n      {\n        \\\"id\\\": \\\"number\\\",\n        \\\"iid\\\": \\\"number\\\",\n        \\\"title\\\": \\\"string\\\",\n        \\\"description\\\": \\\"string\\\",\n        \\\"state\\\": \\\"string\\\",\n        \\\"author\\\": {...},\n        \\\"assignee\\\": {...},\n        \\\"sourceBranch\\\": \\\"string\\\",\n        \\\"targetBranch\\\": \\\"string\\\",\n        \\\"webUrl\\\": \\\"string\\\",\n        \\\"createdAt\\\": \\\"datetime\\\"\n      }\n    ]\n  }\n}\n```\n\n#### GET /api/gitlab/projects/:id/merge-requests/:mrId/changes\n```json\n{\n  \\\"response\\\": {\n    \\\"changes\\\": [\n      {\n        \\\"oldPath\\\": \\\"string\\\",\n        \\\"newPath\\\": \\\"string\\\",\n        \\\"aMode\\\": \\\"string\\\",\n        \\\"bMode\\\": \\\"string\\\",\n        \\\"newFile\\\": false,\n        \\\"renamedFile\\\": false,\n        \\\"deletedFile\\\": false,\n        \\\"diff\\\": \\\"string\\\"\n      }\n    ],\n    \\\"commits\\\": [...],\n    \\\"compareTimeout\\\": false,\n    \\\"compareSameRef\\\": false\n  }\n}\n```\n\n#### POST /api/gitlab/projects/:id/merge-requests/:mrId/notes\n```json\n{\n  \\\"request\\\": {\n    \\\"body\\\": \\\"string\\\",\n    \\\"position\\\": {\n      \\\"baseSha\\\": \\\"string\\\",\n      \\\"headSha\\\": \\\"string\\\",\n      \\\"startSha\\\": \\\"string\\\",\n      \\\"newPath\\\": \\\"string\\\",\n      \\\"newLine\\\": 10,\n      \\\"oldPath\\\": \\\"string\\\",\n      \\\"oldLine\\\": 8\n    }\n  },\n  \\\"response\\\": {\n    \\\"id\\\": \\\"number\\\",\n    \\\"body\\\": \\\"string\\\",\n    \\\"author\\\": {...},\n    \\\"createdAt\\\": \\\"datetime\\\",\n    \\\"system\\\": false,\n    \\\"discussionId\\\": \\\"string\\\"\n  }\n}\n```\n\n### Project Sync APIs\n\n#### POST /api/gitlab/projects/:id/sync\n```json\n{\n  \\\"request\\\": {\n    \\\"syncType\\\": \\\"full|incremental\\\",\n    \\\"syncMembers\\\": true,\n    \\\"syncBranches\\\": true,\n    \\\"force\\\": false\n  },\n  \\\"response\\\": {\n    \\\"syncJobId\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"queued\\\",\n    \\\"estimatedDuration\\\": \\\"30s\\\"\n  }\n}\n```\n\n#### GET /api/gitlab/projects/:id/sync/status\n```json\n{\n  \\\"response\\\": {\n    \\\"status\\\": \\\"idle|syncing|completed|failed\\\",\n    \\\"lastSyncAt\\\": \\\"datetime\\\",\n    \\\"nextSyncAt\\\": \\\"datetime\\\",\n    \\\"syncProgress\\\": {\n      \\\"total\\\": 100,\n      \\\"completed\\\": 75,\n      \\\"failed\\\": 2\n    },\n    \\\"errors\\\": [...]\n  }\n}\n```\n\n## Database Requirements\n\n### GitLab Connections Table Schema\n```sql\nCREATE TABLE gitlab_connections (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL,\n  gitlab_url VARCHAR(255) NOT NULL DEFAULT 'https://gitlab.com',\n  access_token TEXT NOT NULL, -- AES encrypted\n  token_type ENUM('personal', 'oauth') DEFAULT 'personal',\n  token_scopes JSON,\n  expires_at TIMESTAMP,\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_user_id (user_id),\n  INDEX idx_gitlab_url (gitlab_url),\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n);\n```\n\n### GitLab Projects Table Schema\n```sql\nCREATE TABLE gitlab_projects (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  connection_id UUID NOT NULL,\n  project_id UUID NOT NULL,\n  gitlab_project_id BIGINT NOT NULL,\n  gitlab_path VARCHAR(255) NOT NULL,\n  gitlab_namespace VARCHAR(255) NOT NULL,\n  gitlab_name VARCHAR(255) NOT NULL,\n  gitlab_description TEXT,\n  default_branch VARCHAR(100),\n  visibility ENUM('private', 'internal', 'public'),\n  web_url VARCHAR(500),\n  ssh_url VARCHAR(500),\n  http_url VARCHAR(500),\n  webhook_id VARCHAR(100),\n  webhook_secret VARCHAR(255),\n  last_sync_at TIMESTAMP,\n  sync_status ENUM('pending', 'syncing', 'completed', 'failed') DEFAULT 'pending',\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n  \n  UNIQUE KEY uk_gitlab_project (connection_id, gitlab_project_id),\n  INDEX idx_project_id (project_id),\n  INDEX idx_gitlab_project_id (gitlab_project_id),\n  INDEX idx_sync_status (sync_status),\n  FOREIGN KEY (connection_id) REFERENCES gitlab_connections(id) ON DELETE CASCADE,\n  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE\n);\n```\n\n### Webhook Events Table Schema\n```sql\nCREATE TABLE webhook_events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  project_id UUID NOT NULL,\n  gitlab_project_id BIGINT NOT NULL,\n  event_type VARCHAR(50) NOT NULL,\n  event_data JSON NOT NULL,\n  event_signature VARCHAR(255),\n  source_ip INET,\n  status ENUM('received', 'queued', 'processing', 'completed', 'failed') DEFAULT 'received',\n  processed_at TIMESTAMP,\n  error_message TEXT,\n  retry_count INT DEFAULT 0,\n  created_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_project_id (project_id),\n  INDEX idx_event_type (event_type),\n  INDEX idx_status (status),\n  INDEX idx_created_at (created_at),\n  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE\n);\n```\n\n### GitLab API Requests Log Schema\n```sql\nCREATE TABLE gitlab_api_requests (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  connection_id UUID NOT NULL,\n  method VARCHAR(10) NOT NULL,\n  endpoint VARCHAR(500) NOT NULL,\n  status_code INT,\n  response_time_ms INT,\n  rate_limit_remaining INT,\n  rate_limit_reset TIMESTAMP,\n  error_message TEXT,\n  created_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_connection_id (connection_id),\n  INDEX idx_endpoint (endpoint),\n  INDEX idx_status_code (status_code),\n  INDEX idx_created_at (created_at),\n  FOREIGN KEY (connection_id) REFERENCES gitlab_connections(id) ON DELETE CASCADE\n);\n```\n\n## Service Dependencies\n\n### External Dependencies\n- **GitLab API v4**: 项目信息、MR 操作、Webhook 管理\n- **Redis**: 事件队列和缓存\n- **队列服务**: 异步事件处理\n- **加密服务**: Token 加密解密\n\n### Internal Dependencies\n- **用户认证模块**: 用户身份验证\n- **项目管理模块**: 项目数据管理\n- **AI 代码审查模块**: 审查任务触发\n- **通知服务**: 事件通知\n\n## Security Considerations\n\n### Token Security\n- GitLab Token 使用 AES-256 加密存储\n- Token 权限最小化原则\n- Token 定期轮换和验证\n- Token 访问日志记录\n\n### Webhook Security\n- HMAC-SHA256 签名验证\n- 来源 IP 白名单验证\n- 请求频率限制\n- 恶意请求检测\n\n### Data Protection\n- 敏感数据传输加密\n- API 响应数据脱敏\n- 审计日志完整记录\n- 数据访问权限控制\n\n## Error Handling\n\n### Error Response Format\n```json\n{\n  \\\"error\\\": {\n    \\\"code\\\": \\\"GITLAB_001\\\",\n    \\\"message\\\": \\\"GitLab API request failed\\\",\n    \\\"details\\\": \\\"Rate limit exceeded, retry after 60 seconds\\\",\n    \\\"retryAfter\\\": 60,\n    \\\"timestamp\\\": \\\"2025-01-01T00:00:00Z\\\"\n  }\n}\n```\n\n### Error Codes\n- **GITLAB_001**: GitLab API 请求失败\n- **GITLAB_002**: Token 无效或过期\n- **GITLAB_003**: 权限不足\n- **GITLAB_004**: 项目不存在\n- **GITLAB_005**: Webhook 配置失败\n- **GITLAB_006**: 事件处理失败\n- **WEBHOOK_001**: 签名验证失败\n- **WEBHOOK_002**: 事件格式无效\n- **SYNC_001**: 同步任务失败\n\n## Constraints\n\n### Technical Constraints\n- GitLab API v4 兼容性要求\n- Webhook 事件格式固定\n- API 请求频率限制\n- Token 权限范围限制\n- 网络连接稳定性要求\n\n### Business Constraints\n- 只支持有权限访问的项目\n- 遵守 GitLab API 使用条款\n- 不存储 GitLab 源代码内容\n- 审查结果保留期限限制\n- 并发处理数量限制\n\n### Integration Constraints\n- 依赖 GitLab 服务可用性\n- 支持 GitLab CE/EE 版本\n- 防火墙和网络配置要求\n- SSL 证书验证要求\n- 代理服务器支持\n\n## Acceptance Criteria\n\n### AC1: GitLab 项目导入流程\n1. 验证 GitLab Token 有效性\n2. 获取用户项目列表\n3. 选择和过滤项目\n4. 批量创建本地项目记录\n5. 配置 Webhook（如需要）\n6. 返回导入结果统计\n\n### AC2: Webhook 事件处理流程\n1. 接收 GitLab Webhook 请求\n2. 验证签名和来源\n3. 解析事件类型和数据\n4. 入队异步处理\n5. 触发相应业务逻辑\n6. 更新处理状态\n\n### AC3: MR 审查结果同步流程\n1. 接收审查结果数据\n2. 格式化为 GitLab 评论格式\n3. 调用 GitLab API 发布评论\n4. 处理 API 响应和错误\n5. 更新同步状态\n6. 记录操作日志\n\n### AC4: 项目同步流程\n1. 检查同步触发条件\n2. 获取 GitLab 项目最新信息\n3. 对比本地数据差异\n4. 执行增量更新\n5. 处理冲突和错误\n6. 更新同步状态\n\n## Dependencies\n\n### External Dependencies\n- GitLab API v4 服务\n- GitLab Webhook 服务\n- 互联网连接\n- SSL 证书服务\n\n### Internal Dependencies\n- 用户认证模块\n- 项目管理模块\n- 队列处理服务\n- 缓存服务\n- 加密服务\n\n## Risks\n\n### 风险1: GitLab API 变更或不可用\n- **影响**: 高\n- **概率**: 低\n- **缓解**: API 版本锁定、适配层、降级方案、监控告警\n\n### 风险2: API 速率限制\n- **影响**: 中\n- **概率**: 中\n- **缓解**: 请求限流、缓存策略、批量优化、多实例部署\n\n### 风险3: Webhook 丢失或重复\n- **影响**: 中\n- **概率**: 中\n- **缓解**: 幂等性设计、重试机制、状态检查、补偿机制\n\n### 风险4: Token 泄露或过期\n- **影响**: 高\n- **概率**: 低\n- **缓解**: 加密存储、定期轮换、权限最小化、访问审计\n\n## Success Metrics\n\n1. **API 响应时间** < 2s (95th percentile)\n2. **Webhook 处理成功率** > 99%\n3. **项目导入成功率** > 95%\n4. **同步数据一致性** > 99.5%\n5. **API 可用性** > 99.9%\n6. **事件处理延迟** < 5s (平均)\n7. **Token 验证成功率** > 99%\n\n## Testing Requirements\n\n### Unit Testing\n- GitLab API 客户端单元测试覆盖率 > 90%\n- Webhook 事件处理单元测试覆盖率 > 85%\n- 数据同步服务单元测试覆盖率 > 85%\n\n### Integration Testing\n- GitLab API 集成测试\n- Webhook 端到端测试\n- 项目同步集成测试\n- 错误处理集成测试\n\n### Performance Testing\n- API 响应时间测试\n- 并发 Webhook 处理测试\n- 批量操作性能测试\n- 内存和 CPU 使用率测试\n\n### Security Testing\n- Token 安全测试\n- Webhook 签名验证测试\n- 权限验证测试\n- 数据加密测试",
  "fileStats": {
    "size": 17891,
    "lines": 710,
    "lastModified": "2025-09-24T17:57:07.507Z"
  },
  "comments": []
}