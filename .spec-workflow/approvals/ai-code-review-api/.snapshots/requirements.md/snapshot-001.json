{
  "id": "snapshot_1758736817527_lgtucw40d",
  "approvalId": "approval_1758736817525_tkk57r2i0",
  "approvalTitle": "AI代码审查API系统需求文档审批",
  "version": 1,
  "timestamp": "2025-09-24T18:00:17.527Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# Requirements: AI Code Review API System\n\n## Overview\nAI 代码审查 API 系统是 MoonLens 的核心功能模块，通过集成先进的 AI 模型（OpenAI GPT-4、Anthropic Claude）为代码变更提供智能化、高质量的审查建议，包括代码质量分析、安全漏洞检测、性能优化建议和最佳实践推荐。\n\n## User Stories\n\n### 1. AI 审查任务管理 API\n**作为** API 服务\n**我需要** 提供 AI 代码审查任务管理接口\n**以便于** 支持前端用户创建、监控和管理审查任务\n\n**验收标准**：\n- 创建和配置审查任务\n- 支持手动触发和自动触发\n- 任务状态实时跟踪\n- 任务队列管理和优先级设置\n- 任务历史记录和统计\n- 支持任务取消和重试\n\n### 2. AI 模型集成管理 API\n**作为** API 服务\n**我需要** 提供多 AI 模型集成管理接口\n**以便于** 支持不同 AI 提供商和模型的统一调用\n\n**验收标准**：\n- OpenAI GPT-4 模型集成\n- Anthropic Claude 模型集成\n- 模型动态切换和负载均衡\n- API 密钥安全管理\n- 模型响应时间和成功率监控\n- 成本监控和预算控制\n\n### 3. 代码分析处理 API\n**作为** API 服务\n**我需要** 提供代码分析和预处理接口\n**以便于** 为 AI 模型提供结构化的代码上下文\n\n**验收标准**：\n- 代码差异解析和提取\n- 文件类型识别和语言检测\n- 代码上下文构建和依赖分析\n- 大文件分块处理\n- 敏感信息过滤和脱敏\n- 代码质量预检查\n\n### 4. 审查结果处理 API\n**作为** API 服务\n**我需要** 提供审查结果处理和优化接口\n**以便于** 生成高质量的审查报告和建议\n\n**验收标准**：\n- AI 响应解析和标准化\n- 建议分类和严重级别评估\n- 重复建议去重和合并\n- 代码建议可操作性验证\n- 结果格式化和本地化\n- 建议质量评分和排序\n\n### 5. 审查配置管理 API\n**作为** API 服务\n**我需要** 提供审查配置和规则管理接口\n**以便于** 支持个性化审查策略和团队规范\n\n**验收标准**：\n- 审查规则配置和模板管理\n- AI 提示词自定义和优化\n- 审查范围和深度设置\n- 团队代码规范集成\n- 配置版本控制和回滚\n- 配置共享和继承\n\n### 6. 对话式审查 API\n**作为** API 服务\n**我需要** 提供交互式代码讨论接口\n**以便于** 支持开发者与 AI 的深入对话\n\n**验收标准**：\n- 针对特定建议的问答对话\n- 上下文相关的连续对话\n- 代码示例生成和解释\n- 替代方案讨论和建议\n- 对话历史保存和检索\n- 多轮对话状态管理\n\n### 7. 审查统计分析 API\n**作为** API 服务\n**我需要** 提供审查数据统计和分析接口\n**以便于** 支持代码质量趋势分析和效果评估\n\n**验收标准**：\n- 审查统计数据聚合\n- 代码质量趋势分析\n- 团队和个人审查报告\n- AI 模型效果对比分析\n- 成本效益分析\n- 数据导出和可视化\n\n## Functional Requirements\n\n### FR1: 审查引擎核心\n- **FR1.1**: 审查任务调度和执行引擎\n- **FR1.2**: 多 AI 模型适配器和管理\n- **FR1.3**: 代码分析和预处理管道\n- **FR1.4**: 审查结果后处理和优化\n- **FR1.5**: 审查配置和规则引擎\n\n### FR2: AI 模型集成\n- **FR2.1**: OpenAI API 客户端和重试机制\n- **FR2.2**: Anthropic API 客户端和重试机制\n- **FR2.3**: 模型响应格式标准化\n- **FR2.4**: Token 使用优化和缓存策略\n- **FR2.5**: 模型健康检查和故障转移\n\n### FR3: 代码处理管道\n- **FR3.1**: 代码差异解析和分析\n- **FR3.2**: 语言特定的语法分析\n- **FR3.3**: 依赖关系分析和上下文构建\n- **FR3.4**: 大型代码库分块处理策略\n- **FR3.5**: 敏感信息检测和过滤\n\n### FR4: 结果处理系统\n- **FR4.1**: AI 响应解析和验证\n- **FR4.2**: 建议分类和严重度评估\n- **FR4.3**: 重复检测和智能合并\n- **FR4.4**: 建议质量评分和过滤\n- **FR4.5**: 多语言结果本地化\n\n### FR5: 缓存和优化\n- **FR5.1**: 代码块级别缓存机制\n- **FR5.2**: 审查结果智能缓存\n- **FR5.3**: API 调用批处理优化\n- **FR5.4**: 增量审查算法\n- **FR5.5**: 性能监控和自动调优\n\n## Non-Functional Requirements\n\n### NFR1: 性能要求\n- **NFR1.1**: 平均审查完成时间 < 90s\n- **NFR1.2**: AI API 调用响应时间 < 30s\n- **NFR1.3**: 支持 20+ 并发审查任务\n- **NFR1.4**: 大文件审查（> 1000行）< 3分钟\n- **NFR1.5**: 缓存命中率 > 60%\n\n### NFR2: 准确性要求\n- **NFR2.1**: 有用建议率 > 80%\n- **NFR2.2**: 误报率 < 15%\n- **NFR2.3**: 关键问题识别率 > 90%\n- **NFR2.4**: 建议相关性得分 > 4.0/5.0\n- **NFR2.5**: 上下文理解准确率 > 85%\n\n### NFR3: 可靠性要求\n- **NFR3.1**: 审查任务完成率 > 95%\n- **NFR3.2**: AI API 调用成功率 > 98%\n- **NFR3.3**: 系统可用性 > 99.5%\n- **NFR3.4**: 错误恢复时间 < 5分钟\n- **NFR3.5**: 数据一致性保证\n\n### NFR4: 扩展性要求\n- **NFR4.1**: 支持新增 AI 模型提供商\n- **NFR4.2**: 审查规则动态扩展\n- **NFR4.3**: 水平扩展支持\n- **NFR4.4**: 插件化架构支持\n- **NFR4.5**: 配置热更新能力\n\n### NFR5: 成本控制要求\n- **NFR5.1**: AI Token 使用优化 > 30%\n- **NFR5.2**: 智能缓存节省成本 > 40%\n- **NFR5.3**: 成本预警和限额控制\n- **NFR5.4**: 模型选择成本优化\n- **NFR5.5**: 审查效率提升 > 50%\n\n## API Specifications\n\n### Review Task Management APIs\n\n#### POST /api/reviews\n```json\n{\n  \\\"request\\\": {\n    \\\"projectId\\\": \\\"uuid\\\",\n    \\\"type\\\": \\\"merge_request|manual|scheduled\\\",\n    \\\"targetRef\\\": {\n      \\\"type\\\": \\\"merge_request|commit|branch\\\",\n      \\\"id\\\": \\\"string\\\",\n      \\\"sha\\\": \\\"string\\\"\n    },\n    \\\"config\\\": {\n      \\\"aiModel\\\": \\\"gpt-4|claude-3\\\",\n      \\\"depth\\\": \\\"surface|deep|comprehensive\\\",\n      \\\"focus\\\": [\\\"security\\\", \\\"performance\\\", \\\"style\\\", \\\"logic\\\"],\n      \\\"excludePatterns\\\": [\\\"*.md\\\", \\\"test/*\\\"],\n      \\\"customRules\\\": [...]\n    },\n    \\\"priority\\\": \\\"low|normal|high|urgent\\\"\n  },\n  \\\"response\\\": {\n    \\\"id\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"queued\\\",\n    \\\"estimatedDuration\\\": \\\"60s\\\",\n    \\\"queuePosition\\\": 3,\n    \\\"createdAt\\\": \\\"datetime\\\"\n  }\n}\n```\n\n#### GET /api/reviews/:id\n```json\n{\n  \\\"response\\\": {\n    \\\"id\\\": \\\"uuid\\\",\n    \\\"projectId\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"queued|processing|completed|failed|cancelled\\\",\n    \\\"progress\\\": {\n      \\\"current\\\": 3,\n      \\\"total\\\": 10,\n      \\\"stage\\\": \\\"analyzing|reviewing|processing\\\"\n    },\n    \\\"config\\\": {...},\n    \\\"startedAt\\\": \\\"datetime\\\",\n    \\\"completedAt\\\": \\\"datetime\\\",\n    \\\"duration\\\": 87,\n    \\\"results\\\": {\n      \\\"summary\\\": {...},\n      \\\"suggestions\\\": [...],\n      \\\"metrics\\\": {...}\n    },\n    \\\"costs\\\": {\n      \\\"tokens\\\": 15420,\n      \\\"estimatedCost\\\": \\\"$0.23\\\"\n    }\n  }\n}\n```\n\n#### GET /api/reviews\n```json\n{\n  \\\"query\\\": {\n    \\\"projectId\\\": \\\"uuid\\\",\n    \\\"status\\\": \\\"completed|failed\\\",\n    \\\"dateFrom\\\": \\\"2025-01-01\\\",\n    \\\"dateTo\\\": \\\"2025-01-31\\\",\n    \\\"page\\\": 1,\n    \\\"limit\\\": 20\n  },\n  \\\"response\\\": {\n    \\\"reviews\\\": [...],\n    \\\"pagination\\\": {...},\n    \\\"statistics\\\": {\n      \\\"total\\\": 156,\n      \\\"completed\\\": 149,\n      \\\"failed\\\": 4,\n      \\\"avgDuration\\\": 72\n    }\n  }\n}\n```\n\n#### DELETE /api/reviews/:id\n```json\n{\n  \\\"response\\\": {\n    \\\"message\\\": \\\"Review cancelled successfully\\\"\n  }\n}\n```\n\n### AI Model Management APIs\n\n#### GET /api/ai/models\n```json\n{\n  \\\"response\\\": {\n    \\\"models\\\": [\n      {\n        \\\"id\\\": \\\"gpt-4\\\",\n        \\\"provider\\\": \\\"openai\\\",\n        \\\"name\\\": \\\"GPT-4\\\",\n        \\\"description\\\": \\\"Advanced reasoning and code analysis\\\",\n        \\\"capabilities\\\": [\\\"code-review\\\", \\\"explanation\\\", \\\"generation\\\"],\n        \\\"pricing\\\": {\n          \\\"input\\\": \\\"$0.03/1K tokens\\\",\n          \\\"output\\\": \\\"$0.06/1K tokens\\\"\n        },\n        \\\"limits\\\": {\n          \\\"maxTokens\\\": 8192,\n          \\\"rateLimit\\\": \\\"3500 TPM\\\"\n        },\n        \\\"status\\\": \\\"available|unavailable|degraded\\\"\n      }\n    ]\n  }\n}\n```\n\n#### POST /api/ai/models/test\n```json\n{\n  \\\"request\\\": {\n    \\\"modelId\\\": \\\"gpt-4\\\",\n    \\\"testCase\\\": \\\"simple|complex\\\"\n  },\n  \\\"response\\\": {\n    \\\"success\\\": true,\n    \\\"responseTime\\\": 2.34,\n    \\\"quality\\\": 4.2,\n    \\\"cost\\\": \\\"$0.05\\\"\n  }\n}\n```\n\n#### GET /api/ai/usage\n```json\n{\n  \\\"query\\\": {\n    \\\"modelId\\\": \\\"gpt-4\\\",\n    \\\"dateFrom\\\": \\\"2025-01-01\\\",\n    \\\"dateTo\\\": \\\"2025-01-31\\\"\n  },\n  \\\"response\\\": {\n    \\\"usage\\\": {\n      \\\"totalRequests\\\": 2456,\n      \\\"totalTokens\\\": 1234567,\n      \\\"totalCost\\\": \\\"$123.45\\\",\n      \\\"avgResponseTime\\\": 2.8\n    },\n    \\\"breakdown\\\": [\n      {\n        \\\"date\\\": \\\"2025-01-01\\\",\n        \\\"requests\\\": 45,\n        \\\"tokens\\\": 23456,\n        \\\"cost\\\": \\\"$2.34\\\"\n      }\n    ]\n  }\n}\n```\n\n### Code Analysis APIs\n\n#### POST /api/analysis/diff\n```json\n{\n  \\\"request\\\": {\n    \\\"projectId\\\": \\\"uuid\\\",\n    \\\"baseSha\\\": \\\"string\\\",\n    \\\"headSha\\\": \\\"string\\\",\n    \\\"files\\\": [\n      {\n        \\\"path\\\": \\\"src/main.ts\\\",\n        \\\"diff\\\": \\\"string\\\"\n      }\n    ]\n  },\n  \\\"response\\\": {\n    \\\"analysisId\\\": \\\"uuid\\\",\n    \\\"files\\\": [\n      {\n        \\\"path\\\": \\\"src/main.ts\\\",\n        \\\"language\\\": \\\"typescript\\\",\n        \\\"lines\\\": {\n          \\\"added\\\": 15,\n          \\\"deleted\\\": 8,\n          \\\"modified\\\": 23\n        },\n        \\\"complexity\\\": \\\"low|medium|high\\\",\n        \\\"imports\\\": [...],\n        \\\"functions\\\": [...],\n        \\\"classes\\\": [...]\n      }\n    ],\n    \\\"summary\\\": {\n      \\\"totalFiles\\\": 3,\n      \\\"totalLines\\\": 156,\n      \\\"languages\\\": [\\\"typescript\\\", \\\"css\\\"],\n      \\\"estimatedReviewTime\\\": \\\"45s\\\"\n    }\n  }\n}\n```\n\n#### GET /api/analysis/:analysisId/context\n```json\n{\n  \\\"response\\\": {\n    \\\"context\\\": {\n      \\\"projectInfo\\\": {...},\n      \\\"dependencies\\\": [...],\n      \\\"codeStructure\\\": {...},\n      \\\"relatedFiles\\\": [...],\n      \\\"reviewHistory\\\": [...]\n    },\n    \\\"prompt\\\": \\\"string\\\"\n  }\n}\n```\n\n### Review Results APIs\n\n#### GET /api/reviews/:id/suggestions\n```json\n{\n  \\\"query\\\": {\n    \\\"category\\\": \\\"security|performance|style|logic\\\",\n    \\\"severity\\\": \\\"critical|major|minor|info\\\",\n    \\\"file\\\": \\\"src/main.ts\\\"\n  },\n  \\\"response\\\": {\n    \\\"suggestions\\\": [\n      {\n        \\\"id\\\": \\\"uuid\\\",\n        \\\"category\\\": \\\"security\\\",\n        \\\"severity\\\": \\\"major\\\",\n        \\\"title\\\": \\\"Potential SQL injection vulnerability\\\",\n        \\\"description\\\": \\\"The query construction is vulnerable to SQL injection attacks\\\",\n        \\\"file\\\": \\\"src/database.ts\\\",\n        \\\"line\\\": 45,\n        \\\"code\\\": \\\"const query = `SELECT * FROM users WHERE id = ${userId}`;\\\",\n        \\\"suggestion\\\": \\\"Use parameterized queries to prevent SQL injection\\\",\n        \\\"fixExample\\\": \\\"const query = 'SELECT * FROM users WHERE id = ?'; db.query(query, [userId]);\\\",\n        \\\"references\\\": [\\\"https://owasp.org/www-community/attacks/SQL_Injection\\\"],\n        \\\"confidence\\\": 0.92,\n        \\\"tags\\\": [\\\"sql-injection\\\", \\\"security\\\", \\\"database\\\"]\n      }\n    ],\n    \\\"summary\\\": {\n      \\\"total\\\": 23,\n      \\\"bySeverity\\\": {\n        \\\"critical\\\": 2,\n        \\\"major\\\": 8,\n        \\\"minor\\\": 11,\n        \\\"info\\\": 2\n      },\n      \\\"byCategory\\\": {\n        \\\"security\\\": 3,\n        \\\"performance\\\": 7,\n        \\\"style\\\": 9,\n        \\\"logic\\\": 4\n      }\n    }\n  }\n}\n```\n\n#### POST /api/reviews/:id/suggestions/:suggestionId/feedback\n```json\n{\n  \\\"request\\\": {\n    \\\"helpful\\\": true,\n    \\\"comment\\\": \\\"Very useful suggestion, fixed the issue\\\",\n    \\\"applied\\\": true\n  },\n  \\\"response\\\": {\n    \\\"message\\\": \\\"Feedback recorded successfully\\\"\n  }\n}\n```\n\n### Interactive Review APIs\n\n#### POST /api/reviews/:id/chat\n```json\n{\n  \\\"request\\\": {\n    \\\"message\\\": \\\"Can you explain why this code is inefficient?\\\",\n    \\\"context\\\": {\n      \\\"suggestionId\\\": \\\"uuid\\\",\n      \\\"file\\\": \\\"src/main.ts\\\",\n      \\\"line\\\": 45,\n      \\\"code\\\": \\\"string\\\"\n    }\n  },\n  \\\"response\\\": {\n    \\\"id\\\": \\\"uuid\\\",\n    \\\"message\\\": \\\"This code is inefficient because...\\\",\n    \\\"suggestions\\\": [...],\n    \\\"codeExamples\\\": [...],\n    \\\"conversationId\\\": \\\"uuid\\\"\n  }\n}\n```\n\n#### GET /api/reviews/:id/chat/history\n```json\n{\n  \\\"response\\\": {\n    \\\"conversations\\\": [\n      {\n        \\\"id\\\": \\\"uuid\\\",\n        \\\"messages\\\": [\n          {\n            \\\"role\\\": \\\"user|assistant\\\",\n            \\\"content\\\": \\\"string\\\",\n            \\\"timestamp\\\": \\\"datetime\\\",\n            \\\"context\\\": {...}\n          }\n        ],\n        \\\"createdAt\\\": \\\"datetime\\\"\n      }\n    ]\n  }\n}\n```\n\n### Review Configuration APIs\n\n#### GET /api/reviews/config/templates\n```json\n{\n  \\\"response\\\": {\n    \\\"templates\\\": [\n      {\n        \\\"id\\\": \\\"uuid\\\",\n        \\\"name\\\": \\\"Security Focus\\\",\n        \\\"description\\\": \\\"Emphasis on security vulnerabilities\\\",\n        \\\"config\\\": {\n          \\\"focus\\\": [\\\"security\\\", \\\"logic\\\"],\n          \\\"depth\\\": \\\"deep\\\",\n          \\\"customPrompts\\\": {...}\n        },\n        \\\"isDefault\\\": false,\n        \\\"createdBy\\\": \\\"uuid\\\",\n        \\\"usage\\\": 45\n      }\n    ]\n  }\n}\n```\n\n#### POST /api/reviews/config/templates\n```json\n{\n  \\\"request\\\": {\n    \\\"name\\\": \\\"Performance Optimization\\\",\n    \\\"description\\\": \\\"Focus on performance improvements\\\",\n    \\\"config\\\": {\n      \\\"focus\\\": [\\\"performance\\\"],\n      \\\"depth\\\": \\\"comprehensive\\\",\n      \\\"customRules\\\": [...],\n      \\\"customPrompts\\\": {...}\n    }\n  },\n  \\\"response\\\": {\n    \\\"id\\\": \\\"uuid\\\",\n    \\\"message\\\": \\\"Template created successfully\\\"\n  }\n}\n```\n\n## Database Requirements\n\n### Reviews Table Schema\n```sql\nCREATE TABLE reviews (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  project_id UUID NOT NULL,\n  type ENUM('merge_request', 'manual', 'scheduled') NOT NULL,\n  status ENUM('queued', 'processing', 'completed', 'failed', 'cancelled') DEFAULT 'queued',\n  target_type ENUM('merge_request', 'commit', 'branch'),\n  target_id VARCHAR(100),\n  target_sha VARCHAR(40),\n  config JSON NOT NULL,\n  priority ENUM('low', 'normal', 'high', 'urgent') DEFAULT 'normal',\n  ai_model VARCHAR(50),\n  \n  -- Progress tracking\n  progress_current INT DEFAULT 0,\n  progress_total INT DEFAULT 0,\n  progress_stage VARCHAR(50),\n  \n  -- Timing\n  queued_at TIMESTAMP DEFAULT NOW(),\n  started_at TIMESTAMP,\n  completed_at TIMESTAMP,\n  duration_seconds INT,\n  \n  -- Results\n  results JSON,\n  summary JSON,\n  suggestions_count INT DEFAULT 0,\n  \n  -- Costs\n  tokens_used INT DEFAULT 0,\n  estimated_cost DECIMAL(10, 4) DEFAULT 0,\n  \n  -- Metadata\n  created_by UUID,\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_project_id (project_id),\n  INDEX idx_status (status),\n  INDEX idx_created_at (created_at),\n  INDEX idx_priority (priority),\n  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,\n  FOREIGN KEY (created_by) REFERENCES users(id)\n);\n```\n\n### Review Suggestions Table Schema\n```sql\nCREATE TABLE review_suggestions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  review_id UUID NOT NULL,\n  category ENUM('security', 'performance', 'style', 'logic', 'testing') NOT NULL,\n  severity ENUM('critical', 'major', 'minor', 'info') NOT NULL,\n  title VARCHAR(255) NOT NULL,\n  description TEXT NOT NULL,\n  \n  -- Code location\n  file_path VARCHAR(500) NOT NULL,\n  line_number INT,\n  column_number INT,\n  code_snippet TEXT,\n  \n  -- Suggestion details\n  suggestion TEXT NOT NULL,\n  fix_example TEXT,\n  references JSON,\n  \n  -- Quality metrics\n  confidence DECIMAL(3, 2) DEFAULT 0,\n  relevance_score DECIMAL(3, 2) DEFAULT 0,\n  \n  -- User feedback\n  helpful_votes INT DEFAULT 0,\n  unhelpful_votes INT DEFAULT 0,\n  applied BOOLEAN DEFAULT FALSE,\n  \n  -- AI metadata\n  ai_model VARCHAR(50),\n  tokens_used INT DEFAULT 0,\n  \n  created_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_review_id (review_id),\n  INDEX idx_category (category),\n  INDEX idx_severity (severity),\n  INDEX idx_file_path (file_path),\n  INDEX idx_confidence (confidence),\n  FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE\n);\n```\n\n### AI Model Usage Table Schema\n```sql\nCREATE TABLE ai_model_usage (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  model_id VARCHAR(50) NOT NULL,\n  provider VARCHAR(50) NOT NULL,\n  project_id UUID,\n  review_id UUID,\n  \n  -- Request details\n  request_type ENUM('review', 'chat', 'test') NOT NULL,\n  prompt_tokens INT DEFAULT 0,\n  completion_tokens INT DEFAULT 0,\n  total_tokens INT DEFAULT 0,\n  \n  -- Response details\n  response_time_ms INT,\n  status_code INT,\n  success BOOLEAN DEFAULT TRUE,\n  error_message TEXT,\n  \n  -- Costs\n  estimated_cost DECIMAL(10, 6) DEFAULT 0,\n  \n  -- Metadata\n  user_id UUID,\n  created_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_model_id (model_id),\n  INDEX idx_project_id (project_id),\n  INDEX idx_review_id (review_id),\n  INDEX idx_created_at (created_at),\n  INDEX idx_success (success),\n  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE SET NULL,\n  FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE SET NULL,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL\n);\n```\n\n### Review Chat History Table Schema\n```sql\nCREATE TABLE review_chat_history (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  review_id UUID NOT NULL,\n  conversation_id UUID NOT NULL,\n  message_index INT NOT NULL,\n  role ENUM('user', 'assistant') NOT NULL,\n  content TEXT NOT NULL,\n  context JSON,\n  \n  -- AI metadata\n  ai_model VARCHAR(50),\n  tokens_used INT DEFAULT 0,\n  response_time_ms INT,\n  \n  -- User feedback\n  helpful BOOLEAN,\n  feedback_comment TEXT,\n  \n  created_at TIMESTAMP DEFAULT NOW(),\n  \n  INDEX idx_review_id (review_id),\n  INDEX idx_conversation_id (conversation_id),\n  INDEX idx_created_at (created_at),\n  FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE\n);\n```\n\n## Service Dependencies\n\n### External Dependencies\n- **OpenAI API**: GPT-4 模型调用\n- **Anthropic API**: Claude 模型调用\n- **Redis**: 任务队列和缓存\n- **队列服务**: 异步任务处理\n\n### Internal Dependencies\n- **项目管理模块**: 项目信息获取\n- **GitLab 集成模块**: 代码差异获取\n- **用户认证模块**: 用户身份验证\n- **通知服务**: 审查完成通知\n\n## Security Considerations\n\n### API Key Security\n- AI API 密钥 AES-256 加密存储\n- 定期轮换和更新机制\n- 访问权限最小化原则\n- API 密钥使用审计\n\n### Code Privacy\n- 代码内容不永久存储\n- 敏感信息自动脱敏\n- 传输过程加密保护\n- 访问日志完整记录\n\n### Result Security\n- 审查结果访问控制\n- 敏感建议内容过滤\n- 数据保留期限管理\n- 用户数据隐私保护\n\n## Error Handling\n\n### Error Response Format\n```json\n{\n  \\\"error\\\": {\n    \\\"code\\\": \\\"AI_001\\\",\n    \\\"message\\\": \\\"AI model request failed\\\",\n    \\\"details\\\": \\\"Rate limit exceeded for GPT-4 model\\\",\n    \\\"retryAfter\\\": 60,\n    \\\"fallbackModel\\\": \\\"gpt-3.5-turbo\\\",\n    \\\"timestamp\\\": \\\"2025-01-01T00:00:00Z\\\"\n  }\n}\n```\n\n### Error Codes\n- **AI_001**: AI 模型请求失败\n- **AI_002**: Token 限制超出\n- **AI_003**: 模型不可用\n- **AI_004**: 响应解析失败\n- **AI_005**: 成本预算超限\n- **REVIEW_001**: 代码分析失败\n- **REVIEW_002**: 审查任务超时\n- **REVIEW_003**: 结果处理失败\n- **CONFIG_001**: 配置验证失败\n\n## Constraints\n\n### Technical Constraints\n- AI 模型 Token 长度限制\n- API 调用频率限制\n- 并发处理数量限制\n- 响应时间要求\n- 网络连接依赖\n\n### Business Constraints\n- 按使用量计费模式\n- 代码保密性要求\n- 审查质量标准\n- 成本预算控制\n- 服务等级协议\n\n### Integration Constraints\n- 依赖 AI 服务提供商可用性\n- GitLab 集成数据格式\n- 项目权限访问限制\n- 用户身份验证要求\n- 数据保留政策合规\n\n## Acceptance Criteria\n\n### AC1: 自动审查流程\n1. 接收 GitLab MR 事件\n2. 提取代码差异和上下文\n3. 配置审查参数和规则\n4. 调用 AI 模型执行审查\n5. 处理和优化审查结果\n6. 同步结果到 GitLab\n7. 发送通知给相关用户\n\n### AC2: 手动审查流程\n1. 用户选择审查目标\n2. 配置审查参数\n3. 创建审查任务\n4. 队列调度执行\n5. 实时进度更新\n6. 展示审查结果\n7. 支持交互式讨论\n\n### AC3: 结果处理流程\n1. 接收 AI 模型响应\n2. 解析和验证结果格式\n3. 分类和评级建议\n4. 去重和质量过滤\n5. 格式化和本地化\n6. 存储和索引建议\n7. 生成总结报告\n\n### AC4: 配置管理流程\n1. 加载默认配置模板\n2. 用户自定义规则配置\n3. 验证配置有效性\n4. 保存配置版本\n5. 应用到审查任务\n6. 监控配置效果\n7. 优化和调整建议\n\n## Dependencies\n\n### External Dependencies\n- OpenAI GPT-4 API\n- Anthropic Claude API\n- Redis 缓存服务\n- 队列处理服务\n\n### Internal Dependencies\n- GitLab 集成模块\n- 项目管理模块\n- 用户认证模块\n- 通知服务模块\n\n## Risks\n\n### 风险1: AI 模型服务中断\n- **影响**: 高\n- **概率**: 低\n- **缓解**: 多模型备份、本地规则引擎、优雅降级\n\n### 风险2: 审查成本超预算\n- **影响**: 高  \n- **概率**: 中\n- **缓解**: 智能缓存、成本监控、预算预警、使用优化\n\n### 风险3: 审查质量不稳定\n- **影响**: 中\n- **概率**: 中\n- **缓解**: 反馈机制、质量评分、模型调优、人工复核\n\n### 风险4: 代码隐私泄露\n- **影响**: 高\n- **概率**: 低\n- **缓解**: 数据加密、访问控制、审计日志、合规认证\n\n## Success Metrics\n\n1. **审查完成率** > 95%\n2. **平均审查时间** < 90s\n3. **建议有用率** > 80%\n4. **用户满意度** > 4.2/5.0\n5. **成本效率** < $0.1/审查\n6. **API 响应时间** < 30s (95th percentile)\n7. **系统可用性** > 99.5%\n\n## Testing Requirements\n\n### Unit Testing\n- AI 客户端单元测试覆盖率 > 90%\n- 代码分析服务单元测试覆盖率 > 85%\n- 结果处理服务单元测试覆盖率 > 85%\n\n### Integration Testing\n- AI 模型集成测试\n- GitLab 数据集成测试\n- 端到端审查流程测试\n- 错误处理集成测试\n\n### Performance Testing\n- 并发审查任务处理测试\n- 大文件代码审查性能测试\n- AI API 调用性能测试\n- 内存和资源使用测试\n\n### Quality Testing\n- 审查建议质量测试\n- 误报率和漏报率测试\n- 多语言代码审查测试\n- 用户反馈质量测试",
  "fileStats": {
    "size": 22077,
    "lines": 905,
    "lastModified": "2025-09-24T17:59:42.577Z"
  },
  "comments": []
}