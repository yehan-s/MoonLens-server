openapi: 3.0.0
info:
  title: MoonLens API
  description: GitLab AI 代码审查平台 RESTful API
  version: 1.0.0
  contact:
    name: MoonLens Team
    email: api@moonlens.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: 本地开发服务器
  - url: https://api.moonlens.com
    description: 生产服务器

tags:
  - name: Authentication
    description: 用户认证相关接口
  - name: Users
    description: 用户管理相关接口
  - name: Projects
    description: 项目管理相关接口
  - name: Reviews
    description: 代码审查相关接口
  - name: OAuth
    description: GitLab OAuth 集成

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer Token

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        fullName:
          type: string
        avatar:
          type: string
          format: uri
        role:
          type: string
          enum: [ADMIN, USER, GUEST]
        isActive:
          type: boolean
        emailVerified:
          type: boolean
        gitlabUserId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    RegisterRequest:
      type: object
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        username:
          type: string
          minLength: 3
          maxLength: 50
          pattern: '^[a-zA-Z0-9_-]+$'
          example: johndoe
        password:
          type: string
          minLength: 8
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@$!%*?&]{8,}$'
          example: SecurePass123
        fullName:
          type: string
          maxLength: 100
          example: John Doe

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        deviceId:
          type: string
          description: 可选的设备标识符

    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
          description: Token 过期时间（秒）

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    ChangePasswordRequest:
      type: object
      required:
        - oldPassword
        - newPassword
        - confirmPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
          minLength: 8
        confirmPassword:
          type: string

    ChangeEmailRequest:
      type: object
      required:
        - newEmail
        - password
      properties:
        newEmail:
          type: string
          format: email
        password:
          type: string

    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        gitlabProjectId:
          type: string
        gitlabProjectUrl:
          type: string
          format: uri
        defaultBranch:
          type: string
        isActive:
          type: boolean
        reviewConfig:
          type: object
        createdAt:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        gitlabMergeRequestId:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED]
        reviewType:
          type: string
          enum: [PUSH, MERGE_REQUEST, MANUAL]
        result:
          type: object
        createdAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        error:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string

    PaginatedResponse:
      type: object
      properties:
        data:
          type: array
          items: {}
        total:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: 用户注册
      description: 创建新用户账户
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: 请求参数无效
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 邮箱或用户名已存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: 用户登录
      description: 使用邮箱和密码登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 邮箱或密码错误
        '403':
          description: 账户被锁定

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: 刷新访问令牌
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 刷新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  expiresIn:
                    type: integer
        '401':
          description: 刷新令牌无效

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: 用户登出
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: 登出成功
        '401':
          description: 未认证

  /auth/profile:
    get:
      tags:
        - Authentication
      summary: 获取当前用户信息
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功返回用户信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 未认证

  /auth/login-history:
    get:
      tags:
        - Authentication
      summary: 获取登录历史
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: 成功返回登录历史
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    ipAddress:
                      type: string
                    userAgent:
                      type: string
                    loginMethod:
                      type: string
                    success:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time

  /auth/sessions:
    get:
      tags:
        - Authentication
      summary: 获取活跃会话
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功返回会话列表
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: 忘记密码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 重置邮件已发送

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: 重置密码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: 密码重置成功

  /users/profile:
    get:
      tags:
        - Users
      summary: 获取用户资料
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功返回用户资料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    put:
      tags:
        - Users
      summary: 更新用户资料
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                fullName:
                  type: string
                avatar:
                  type: string
      responses:
        '200':
          description: 更新成功

  /users/change-password:
    post:
      tags:
        - Users
      summary: 修改密码
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: 密码修改成功
        '400':
          description: 请求参数无效
        '401':
          description: 当前密码错误

  /users/change-email:
    post:
      tags:
        - Users
      summary: 修改邮箱
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
      responses:
        '200':
          description: 邮箱修改成功

  /users/avatar:
    post:
      tags:
        - Users
      summary: 上传头像
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: 头像上传成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatarUrl:
                    type: string

  /auth/gitlab/authorize:
    get:
      tags:
        - OAuth
      summary: 获取 GitLab 授权 URL
      parameters:
        - in: query
          name: redirect_uri
          schema:
            type: string
      responses:
        '200':
          description: 成功返回授权 URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  authUrl:
                    type: string
                  state:
                    type: string

  /auth/gitlab/callback:
    post:
      tags:
        - OAuth
      summary: GitLab OAuth 回调
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - state
              properties:
                code:
                  type: string
                state:
                  type: string
      responses:
        '200':
          description: OAuth 认证成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /projects:
    get:
      tags:
        - Projects
      summary: 获取项目列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: isActive
          schema:
            type: boolean
      responses:
        '200':
          description: 成功返回项目列表
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'

  /reviews:
    get:
      tags:
        - Reviews
      summary: 获取代码审查列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED]
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: 成功返回审查列表
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'

  /health:
    get:
      tags:
        - System
      summary: 健康检查
      responses:
        '200':
          description: 服务健康
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                  details:
                    type: object